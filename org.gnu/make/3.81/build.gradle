/*
 *    Copyright (C) 2017 QAware GmbH
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

plugins {
    id 'de.undercouch.download' version '1.2'
    id 'com.jfrog.bintray' version '1.2'
    id 'de.qaware.seu.as.code.credentials' version '2.5.0'
}

apply plugin: 'base'
apply plugin: 'maven-publish'

import de.undercouch.gradle.tasks.download.Download

task downloadArchiveBin(type: Download) {
    src "https://deac-fra.dl.sourceforge.net/project/gnuwin32/make/3.81/make-3.81-bin.zip"
    dest "$buildDir"
}

task downloadArchiveDep(type: Download) {
    src "https://deac-fra.dl.sourceforge.net/project/gnuwin32/make/3.81/make-3.81-dep.zip"
    dest "$buildDir"
}

task extractArchiveBin(type: Copy, dependsOn: downloadArchiveBin) {
    from { zipTree("$buildDir/make-3.81-bin.zip") }
    into "$buildDir/files/bin"
}

task extractArchiveDep(type: Copy, dependsOn: downloadArchiveDep) {
    from { zipTree("$buildDir/make-3.81-dep.zip") }
    into "$buildDir/files/bin"
}

task buildPackage(type: Jar, dependsOn: [extractArchiveBin, extractArchiveDep]) {
    baseName project.name
    version version
    extension 'jar'
    classifier 'win'
    destinationDir buildDir
    from "$buildDir/files/bin"
    from "files"
}

publishing {
    publications {
        gradle(MavenPublication) {
            artifact buildPackage
        }
    }
    repositories {
        // set the properties via -P to publish to your company repo
        maven {
            url = project.hasProperty('nexusUrl') ? project.nexusUrl : ''
            credentials {
                if (project.credentials.get("nexus") != null) {
                    username = project.credentials.get('nexus').username
                    password = project.credentials.get('nexus').password
                }
                else {
                    username = project.hasProperty('nexusUsername') ? project.nexusUsername : ''
                    password = project.hasProperty('nexusPassword') ? project.nexusPassword : ''
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : 'unknown'
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : 'unknown'
    publications = ['gradle']
    publish = true
    dryRun = false
    pkg {
        repo = project.bintrayRepo
        name = project.name
        desc = project.description
        licenses = ['Apache-2.0']
        labels = ['gradle', 'seu-as-code', 'package']
        websiteUrl = project.websiteUrl
        issueTrackerUrl = project.issueTrackerUrl
        vcsUrl = project.scmUrl
        publicDownloadNumbers = true

        version {
            name = project.version
            desc = "${project.description} ${project.version}"
            released = new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZZ")

            mavenCentralSync {
                sync = false
            }
        }
    }
}
